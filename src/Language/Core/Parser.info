-----------------------------------------------------------------------------
Info file generated by Happy Version 1.19.10 from src/Language/Core/Parser.y
-----------------------------------------------------------------------------

state 66 contains 9 shift/reduce conflicts.
state 72 contains 13 reduce/reduce conflicts.
state 74 contains 5 shift/reduce conflicts.
state 84 contains 5 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parser -> bind                              (0)
	bind -> LCOMMENT bind_name typedecl id_info var '=' expr   (1)
	bind_name -> var                                   (2)
	bind_name -> '<0>:' var                            (3)
	id_info -> '<0>[' id_info_list ']'                 (4)
	id_info_list -> id_info_item                       (5)
	id_info_list -> id_info_item ',' id_info_list      (6)
	id_info_item -> GblId                              (7)
	id_info_item -> LclIdX                             (8)
	id_info_item -> LclId                              (9)
	id_info_item -> Caf '=' CON                        (10)
	id_info_item -> Str '=' VAR                        (11)
	id_info_item -> Unf '=' unf                        (12)
	id_info_item -> Arity '=' INT                      (13)
	unf -> OtherCon '[' ']'                            (14)
	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'   (15)
	uf_guidance -> ALWAYS_IF '(' key_value_eq ')'      (16)
	key_value_eq -> VAR '=' expr                       (17)
	key_value_eq -> VAR '=' expr ',' key_value_eq      (18)
	var -> VAR                                         (19)
	var -> qVAR                                        (20)
	con -> CON                                         (21)
	con -> qCON                                        (22)
	type -> '(' type ')'                               (23)
	type -> type type_terminal                         (24)
	type -> type_terminal                              (25)
	type_terminal -> var                               (26)
	type_terminal -> con                               (27)
	type_terminal -> '[' type ']'                      (28)
	type_terminal -> '(' ')'                           (29)
	typedecl -> '::' type                              (30)
	coercion -> expr '::' type                         (31)
	expr -> '(' expr ')'                               (32)
	expr -> expr_terminal '@' type                     (33)
	expr -> expr_terminal '`' CAST '`' coercion        (34)
	expr -> expr_terminal                              (35)
	expr -> expr expr_list                             (36)
	expr_list -> expr expr_list                        (37)
	expr_list -> expr                                  (38)
	expr_terminal -> '$w/w' var                        (39)
	expr_terminal -> var                               (40)
	expr_terminal -> con                               (41)
	expr_terminal -> PSTRING                           (42)
	expr_terminal -> PINTEGER                          (43)
	expr_terminal -> INT                               (44)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	'<0>['         { SrcLoc.L (SrcLoc.RealSrcSpan l) (ITobrack) | SrcLoc.srcSpanStartCol l == 1 }
	'<0>:'         { SrcLoc.L (SrcLoc.RealSrcSpan l) (ITcolon) | SrcLoc.srcSpanStartCol l == 1 }
	'::'           { SrcLoc.L _ (ITdcolon NormalSyntax) }
	'['            { SrcLoc.L _ (ITobrack) }
	']'            { SrcLoc.L _ (ITcbrack) }
	'{'            { SrcLoc.L _ (ITocurly) }
	'}'            { SrcLoc.L _ (ITccurly) }
	'('            { SrcLoc.L _ (IToparen) }
	')'            { SrcLoc.L _ (ITcparen) }
	'='            { SrcLoc.L _ (ITequal) }
	','            { SrcLoc.L _ (ITcomma) }
	'@'            { SrcLoc.L _ (ITat) }
	'`'            { SrcLoc.L _ (ITbackquote) }
	'$w/w'         { SrcLoc.L _ (ITqvarsym ($$,"$")) }
	Caf            { SrcLoc.L _ (ITconid "Caf") }
	Unf            { SrcLoc.L _ (ITconid "Unf") }
	Str            { SrcLoc.L _ (ITconid "Str") }
	GblId          { SrcLoc.L _ (ITconid "GblId") }
	LclIdX         { SrcLoc.L _ (ITconid "LclIdX") }
	LclId          { SrcLoc.L _ (ITconid "LclId") }
	Arity          { SrcLoc.L _ (ITconid "Arity") }
	OtherCon       { SrcLoc.L _ (ITconid "OtherCon") }
	Src            { SrcLoc.L _ (ITconid "Src") }
	TopLvl         { SrcLoc.L _ (ITconid "TopLvl") }
	Value          { SrcLoc.L _ (ITconid "Value") }
	ConLike        { SrcLoc.L _ (ITconid "ConLike") }
	WorkFree       { SrcLoc.L _ (ITconid "WorkFree") }
	Expandable     { SrcLoc.L _ (ITconid "Expandable") }
	Guidance       { SrcLoc.L _ (ITconid "Guidance") }
	Tmpl           { SrcLoc.L _ (ITconid "Tmpl") }
	ALWAYS_IF      { SrcLoc.L _ (ITconid "ALWAYS_IF") }
	CAST           { SrcLoc.L _ (ITvarid "cast") }
	VAR            { SrcLoc.L _ (ITvarid $$) }
	qVAR           { SrcLoc.L _ (ITqvarid $$) }
	CON            { SrcLoc.L _ (ITconid $$) }
	qCON           { SrcLoc.L _ (ITqconid $$) }
	LCOMMENT       { SrcLoc.L _ (ITlineComment $$) }
	PSTRING        { SrcLoc.L _ (ITprimstring _ $$) }
	PINTEGER       { SrcLoc.L _ (ITprimint _ $$) }
	INT            { SrcLoc.L _ (ITinteger (IL _ _ $$)) }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parser   rule  0
	bind            rule  1
	bind_name       rules 2, 3
	id_info         rule  4
	id_info_list    rules 5, 6
	id_info_item    rules 7, 8, 9, 10, 11, 12, 13
	unf             rules 14, 15
	uf_guidance     rule  16
	key_value_eq    rules 17, 18
	var             rules 19, 20
	con             rules 21, 22
	type            rules 23, 24, 25
	type_terminal   rules 26, 27, 28, 29
	typedecl        rule  30
	coercion        rule  31
	expr            rules 32, 33, 34, 35, 36
	expr_list       rules 37, 38
	expr_terminal   rules 39, 40, 41, 42, 43, 44

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0


	LCOMMENT       shift, and enter state 2

	bind           goto state 3

State 1


	LCOMMENT       shift, and enter state 2


State 2

	bind -> LCOMMENT . bind_name typedecl id_info var '=' expr    (rule 1)

	'<0>:'         shift, and enter state 6
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8

	bind_name      goto state 4
	var            goto state 5

State 3

	%start_parser -> bind .                             (rule 0)

	%eof           accept


State 4

	bind -> LCOMMENT bind_name . typedecl id_info var '=' expr    (rule 1)

	'::'           shift, and enter state 11

	typedecl       goto state 10

State 5

	bind_name -> var .                                  (rule 2)

	'::'           reduce using rule 2


State 6

	bind_name -> '<0>:' . var                           (rule 3)

	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8

	var            goto state 9

State 7

	var -> VAR .                                        (rule 19)

	'<0>['         reduce using rule 19
	'::'           reduce using rule 19
	'['            reduce using rule 19
	']'            reduce using rule 19
	'}'            reduce using rule 19
	'('            reduce using rule 19
	')'            reduce using rule 19
	'='            reduce using rule 19
	','            reduce using rule 19
	'@'            reduce using rule 19
	'`'            reduce using rule 19
	'$w/w'         reduce using rule 19
	VAR            reduce using rule 19
	qVAR           reduce using rule 19
	CON            reduce using rule 19
	qCON           reduce using rule 19
	PSTRING        reduce using rule 19
	PINTEGER       reduce using rule 19
	INT            reduce using rule 19
	%eof           reduce using rule 19


State 8

	var -> qVAR .                                       (rule 20)

	'<0>['         reduce using rule 20
	'::'           reduce using rule 20
	'['            reduce using rule 20
	']'            reduce using rule 20
	'}'            reduce using rule 20
	'('            reduce using rule 20
	')'            reduce using rule 20
	'='            reduce using rule 20
	','            reduce using rule 20
	'@'            reduce using rule 20
	'`'            reduce using rule 20
	'$w/w'         reduce using rule 20
	VAR            reduce using rule 20
	qVAR           reduce using rule 20
	CON            reduce using rule 20
	qCON           reduce using rule 20
	PSTRING        reduce using rule 20
	PINTEGER       reduce using rule 20
	INT            reduce using rule 20
	%eof           reduce using rule 20


State 9

	bind_name -> '<0>:' var .                           (rule 3)

	'::'           reduce using rule 3


State 10

	bind -> LCOMMENT bind_name typedecl . id_info var '=' expr    (rule 1)

	'<0>['         shift, and enter state 21

	id_info        goto state 20

State 11

	typedecl -> '::' . type                             (rule 30)

	'['            shift, and enter state 16
	'('            shift, and enter state 17
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type           goto state 14
	type_terminal  goto state 15

State 12

	type_terminal -> var .                              (rule 26)

	'<0>['         reduce using rule 26
	'::'           reduce using rule 26
	'['            reduce using rule 26
	']'            reduce using rule 26
	'}'            reduce using rule 26
	'('            reduce using rule 26
	')'            reduce using rule 26
	','            reduce using rule 26
	'$w/w'         reduce using rule 26
	VAR            reduce using rule 26
	qVAR           reduce using rule 26
	CON            reduce using rule 26
	qCON           reduce using rule 26
	PSTRING        reduce using rule 26
	PINTEGER       reduce using rule 26
	INT            reduce using rule 26
	%eof           reduce using rule 26


State 13

	type_terminal -> con .                              (rule 27)

	'<0>['         reduce using rule 27
	'::'           reduce using rule 27
	'['            reduce using rule 27
	']'            reduce using rule 27
	'}'            reduce using rule 27
	'('            reduce using rule 27
	')'            reduce using rule 27
	','            reduce using rule 27
	'$w/w'         reduce using rule 27
	VAR            reduce using rule 27
	qVAR           reduce using rule 27
	CON            reduce using rule 27
	qCON           reduce using rule 27
	PSTRING        reduce using rule 27
	PINTEGER       reduce using rule 27
	INT            reduce using rule 27
	%eof           reduce using rule 27


State 14

	type -> type . type_terminal                        (rule 24)
	typedecl -> '::' type .                             (rule 30)

	'<0>['         reduce using rule 30
	'['            shift, and enter state 16
	'('            shift, and enter state 36
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type_terminal  goto state 35

State 15

	type -> type_terminal .                             (rule 25)

	'<0>['         reduce using rule 25
	'::'           reduce using rule 25
	'['            reduce using rule 25
	']'            reduce using rule 25
	'}'            reduce using rule 25
	'('            reduce using rule 25
	')'            reduce using rule 25
	','            reduce using rule 25
	'$w/w'         reduce using rule 25
	VAR            reduce using rule 25
	qVAR           reduce using rule 25
	CON            reduce using rule 25
	qCON           reduce using rule 25
	PSTRING        reduce using rule 25
	PINTEGER       reduce using rule 25
	INT            reduce using rule 25
	%eof           reduce using rule 25


State 16

	type_terminal -> '[' . type ']'                     (rule 28)

	'['            shift, and enter state 16
	'('            shift, and enter state 17
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type           goto state 34
	type_terminal  goto state 15

State 17

	type -> '(' . type ')'                              (rule 23)
	type_terminal -> '(' . ')'                          (rule 29)

	'['            shift, and enter state 16
	'('            shift, and enter state 17
	')'            shift, and enter state 33
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type           goto state 32
	type_terminal  goto state 15

State 18

	con -> CON .                                        (rule 21)

	'<0>['         reduce using rule 21
	'::'           reduce using rule 21
	'['            reduce using rule 21
	']'            reduce using rule 21
	'}'            reduce using rule 21
	'('            reduce using rule 21
	')'            reduce using rule 21
	','            reduce using rule 21
	'@'            reduce using rule 21
	'`'            reduce using rule 21
	'$w/w'         reduce using rule 21
	VAR            reduce using rule 21
	qVAR           reduce using rule 21
	CON            reduce using rule 21
	qCON           reduce using rule 21
	PSTRING        reduce using rule 21
	PINTEGER       reduce using rule 21
	INT            reduce using rule 21
	%eof           reduce using rule 21


State 19

	con -> qCON .                                       (rule 22)

	'<0>['         reduce using rule 22
	'::'           reduce using rule 22
	'['            reduce using rule 22
	']'            reduce using rule 22
	'}'            reduce using rule 22
	'('            reduce using rule 22
	')'            reduce using rule 22
	','            reduce using rule 22
	'@'            reduce using rule 22
	'`'            reduce using rule 22
	'$w/w'         reduce using rule 22
	VAR            reduce using rule 22
	qVAR           reduce using rule 22
	CON            reduce using rule 22
	qCON           reduce using rule 22
	PSTRING        reduce using rule 22
	PINTEGER       reduce using rule 22
	INT            reduce using rule 22
	%eof           reduce using rule 22


State 20

	bind -> LCOMMENT bind_name typedecl id_info . var '=' expr    (rule 1)

	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8

	var            goto state 31

State 21

	id_info -> '<0>[' . id_info_list ']'                (rule 4)

	Caf            shift, and enter state 24
	Unf            shift, and enter state 25
	Str            shift, and enter state 26
	GblId          shift, and enter state 27
	LclIdX         shift, and enter state 28
	LclId          shift, and enter state 29
	Arity          shift, and enter state 30

	id_info_list   goto state 22
	id_info_item   goto state 23

State 22

	id_info -> '<0>[' id_info_list . ']'                (rule 4)

	']'            shift, and enter state 45


State 23

	id_info_list -> id_info_item .                      (rule 5)
	id_info_list -> id_info_item . ',' id_info_list     (rule 6)

	']'            reduce using rule 5
	','            shift, and enter state 44


State 24

	id_info_item -> Caf . '=' CON                       (rule 10)

	'='            shift, and enter state 43


State 25

	id_info_item -> Unf . '=' unf                       (rule 12)

	'='            shift, and enter state 42


State 26

	id_info_item -> Str . '=' VAR                       (rule 11)

	'='            shift, and enter state 41


State 27

	id_info_item -> GblId .                             (rule 7)

	']'            reduce using rule 7
	','            reduce using rule 7


State 28

	id_info_item -> LclIdX .                            (rule 8)

	']'            reduce using rule 8
	','            reduce using rule 8


State 29

	id_info_item -> LclId .                             (rule 9)

	']'            reduce using rule 9
	','            reduce using rule 9


State 30

	id_info_item -> Arity . '=' INT                     (rule 13)

	'='            shift, and enter state 40


State 31

	bind -> LCOMMENT bind_name typedecl id_info var . '=' expr    (rule 1)

	'='            shift, and enter state 39


State 32

	type -> '(' type . ')'                              (rule 23)
	type -> type . type_terminal                        (rule 24)

	'['            shift, and enter state 16
	'('            shift, and enter state 36
	')'            shift, and enter state 38
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type_terminal  goto state 35

State 33

	type_terminal -> '(' ')' .                          (rule 29)

	'<0>['         reduce using rule 29
	'::'           reduce using rule 29
	'['            reduce using rule 29
	']'            reduce using rule 29
	'}'            reduce using rule 29
	'('            reduce using rule 29
	')'            reduce using rule 29
	','            reduce using rule 29
	'$w/w'         reduce using rule 29
	VAR            reduce using rule 29
	qVAR           reduce using rule 29
	CON            reduce using rule 29
	qCON           reduce using rule 29
	PSTRING        reduce using rule 29
	PINTEGER       reduce using rule 29
	INT            reduce using rule 29
	%eof           reduce using rule 29


State 34

	type -> type . type_terminal                        (rule 24)
	type_terminal -> '[' type . ']'                     (rule 28)

	'['            shift, and enter state 16
	']'            shift, and enter state 37
	'('            shift, and enter state 36
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type_terminal  goto state 35

State 35

	type -> type type_terminal .                        (rule 24)

	'<0>['         reduce using rule 24
	'::'           reduce using rule 24
	'['            reduce using rule 24
	']'            reduce using rule 24
	'}'            reduce using rule 24
	'('            reduce using rule 24
	')'            reduce using rule 24
	','            reduce using rule 24
	'$w/w'         reduce using rule 24
	VAR            reduce using rule 24
	qVAR           reduce using rule 24
	CON            reduce using rule 24
	qCON           reduce using rule 24
	PSTRING        reduce using rule 24
	PINTEGER       reduce using rule 24
	INT            reduce using rule 24
	%eof           reduce using rule 24


State 36

	type_terminal -> '(' . ')'                          (rule 29)

	')'            shift, and enter state 33


State 37

	type_terminal -> '[' type ']' .                     (rule 28)

	'<0>['         reduce using rule 28
	'::'           reduce using rule 28
	'['            reduce using rule 28
	']'            reduce using rule 28
	'}'            reduce using rule 28
	'('            reduce using rule 28
	')'            reduce using rule 28
	','            reduce using rule 28
	'$w/w'         reduce using rule 28
	VAR            reduce using rule 28
	qVAR           reduce using rule 28
	CON            reduce using rule 28
	qCON           reduce using rule 28
	PSTRING        reduce using rule 28
	PINTEGER       reduce using rule 28
	INT            reduce using rule 28
	%eof           reduce using rule 28


State 38

	type -> '(' type ')' .                              (rule 23)

	'<0>['         reduce using rule 23
	'::'           reduce using rule 23
	'['            reduce using rule 23
	']'            reduce using rule 23
	'}'            reduce using rule 23
	'('            reduce using rule 23
	')'            reduce using rule 23
	','            reduce using rule 23
	'$w/w'         reduce using rule 23
	VAR            reduce using rule 23
	qVAR           reduce using rule 23
	CON            reduce using rule 23
	qCON           reduce using rule 23
	PSTRING        reduce using rule 23
	PINTEGER       reduce using rule 23
	INT            reduce using rule 23
	%eof           reduce using rule 23


State 39

	bind -> LCOMMENT bind_name typedecl id_info var '=' . expr    (rule 1)

	'('            shift, and enter state 57
	'$w/w'         shift, and enter state 58
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19
	PSTRING        shift, and enter state 59
	PINTEGER       shift, and enter state 60
	INT            shift, and enter state 61

	var            goto state 53
	con            goto state 54
	expr           goto state 55
	expr_terminal  goto state 56

State 40

	id_info_item -> Arity '=' . INT                     (rule 13)

	INT            shift, and enter state 52


State 41

	id_info_item -> Str '=' . VAR                       (rule 11)

	VAR            shift, and enter state 51


State 42

	id_info_item -> Unf '=' . unf                       (rule 12)

	Unf            shift, and enter state 49
	OtherCon       shift, and enter state 50

	unf            goto state 48

State 43

	id_info_item -> Caf '=' . CON                       (rule 10)

	CON            shift, and enter state 47


State 44

	id_info_list -> id_info_item ',' . id_info_list     (rule 6)

	Caf            shift, and enter state 24
	Unf            shift, and enter state 25
	Str            shift, and enter state 26
	GblId          shift, and enter state 27
	LclIdX         shift, and enter state 28
	LclId          shift, and enter state 29
	Arity          shift, and enter state 30

	id_info_list   goto state 46
	id_info_item   goto state 23

State 45

	id_info -> '<0>[' id_info_list ']' .                (rule 4)

	VAR            reduce using rule 4
	qVAR           reduce using rule 4


State 46

	id_info_list -> id_info_item ',' id_info_list .     (rule 6)

	']'            reduce using rule 6


State 47

	id_info_item -> Caf '=' CON .                       (rule 10)

	']'            reduce using rule 10
	','            reduce using rule 10


State 48

	id_info_item -> Unf '=' unf .                       (rule 12)

	']'            reduce using rule 12
	','            reduce using rule 12


State 49

	unf -> Unf . '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	'{'            shift, and enter state 69


State 50

	unf -> OtherCon . '[' ']'                           (rule 14)

	'['            shift, and enter state 68


State 51

	id_info_item -> Str '=' VAR .                       (rule 11)

	']'            reduce using rule 11
	','            reduce using rule 11


State 52

	id_info_item -> Arity '=' INT .                     (rule 13)

	']'            reduce using rule 13
	','            reduce using rule 13


State 53

	expr_terminal -> var .                              (rule 40)

	'::'           reduce using rule 40
	'('            reduce using rule 40
	')'            reduce using rule 40
	','            reduce using rule 40
	'@'            reduce using rule 40
	'`'            reduce using rule 40
	'$w/w'         reduce using rule 40
	VAR            reduce using rule 40
	qVAR           reduce using rule 40
	CON            reduce using rule 40
	qCON           reduce using rule 40
	PSTRING        reduce using rule 40
	PINTEGER       reduce using rule 40
	INT            reduce using rule 40
	%eof           reduce using rule 40


State 54

	expr_terminal -> con .                              (rule 41)

	'::'           reduce using rule 41
	'('            reduce using rule 41
	')'            reduce using rule 41
	','            reduce using rule 41
	'@'            reduce using rule 41
	'`'            reduce using rule 41
	'$w/w'         reduce using rule 41
	VAR            reduce using rule 41
	qVAR           reduce using rule 41
	CON            reduce using rule 41
	qCON           reduce using rule 41
	PSTRING        reduce using rule 41
	PINTEGER       reduce using rule 41
	INT            reduce using rule 41
	%eof           reduce using rule 41


State 55

	bind -> LCOMMENT bind_name typedecl id_info var '=' expr .    (rule 1)
	expr -> expr . expr_list                            (rule 36)

	'('            shift, and enter state 57
	'$w/w'         shift, and enter state 58
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19
	PSTRING        shift, and enter state 59
	PINTEGER       shift, and enter state 60
	INT            shift, and enter state 61
	%eof           reduce using rule 1

	var            goto state 53
	con            goto state 54
	expr           goto state 66
	expr_list      goto state 67
	expr_terminal  goto state 56

State 56

	expr -> expr_terminal . '@' type                    (rule 33)
	expr -> expr_terminal . '`' CAST '`' coercion       (rule 34)
	expr -> expr_terminal .                             (rule 35)

	'::'           reduce using rule 35
	'('            reduce using rule 35
	')'            reduce using rule 35
	','            reduce using rule 35
	'@'            shift, and enter state 64
	'`'            shift, and enter state 65
	'$w/w'         reduce using rule 35
	VAR            reduce using rule 35
	qVAR           reduce using rule 35
	CON            reduce using rule 35
	qCON           reduce using rule 35
	PSTRING        reduce using rule 35
	PINTEGER       reduce using rule 35
	INT            reduce using rule 35
	%eof           reduce using rule 35


State 57

	expr -> '(' . expr ')'                              (rule 32)

	'('            shift, and enter state 57
	'$w/w'         shift, and enter state 58
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19
	PSTRING        shift, and enter state 59
	PINTEGER       shift, and enter state 60
	INT            shift, and enter state 61

	var            goto state 53
	con            goto state 54
	expr           goto state 63
	expr_terminal  goto state 56

State 58

	expr_terminal -> '$w/w' . var                       (rule 39)

	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8

	var            goto state 62

State 59

	expr_terminal -> PSTRING .                          (rule 42)

	'::'           reduce using rule 42
	'('            reduce using rule 42
	')'            reduce using rule 42
	','            reduce using rule 42
	'@'            reduce using rule 42
	'`'            reduce using rule 42
	'$w/w'         reduce using rule 42
	VAR            reduce using rule 42
	qVAR           reduce using rule 42
	CON            reduce using rule 42
	qCON           reduce using rule 42
	PSTRING        reduce using rule 42
	PINTEGER       reduce using rule 42
	INT            reduce using rule 42
	%eof           reduce using rule 42


State 60

	expr_terminal -> PINTEGER .                         (rule 43)

	'::'           reduce using rule 43
	'('            reduce using rule 43
	')'            reduce using rule 43
	','            reduce using rule 43
	'@'            reduce using rule 43
	'`'            reduce using rule 43
	'$w/w'         reduce using rule 43
	VAR            reduce using rule 43
	qVAR           reduce using rule 43
	CON            reduce using rule 43
	qCON           reduce using rule 43
	PSTRING        reduce using rule 43
	PINTEGER       reduce using rule 43
	INT            reduce using rule 43
	%eof           reduce using rule 43


State 61

	expr_terminal -> INT .                              (rule 44)

	'::'           reduce using rule 44
	'('            reduce using rule 44
	')'            reduce using rule 44
	','            reduce using rule 44
	'@'            reduce using rule 44
	'`'            reduce using rule 44
	'$w/w'         reduce using rule 44
	VAR            reduce using rule 44
	qVAR           reduce using rule 44
	CON            reduce using rule 44
	qCON           reduce using rule 44
	PSTRING        reduce using rule 44
	PINTEGER       reduce using rule 44
	INT            reduce using rule 44
	%eof           reduce using rule 44


State 62

	expr_terminal -> '$w/w' var .                       (rule 39)

	'::'           reduce using rule 39
	'('            reduce using rule 39
	')'            reduce using rule 39
	','            reduce using rule 39
	'@'            reduce using rule 39
	'`'            reduce using rule 39
	'$w/w'         reduce using rule 39
	VAR            reduce using rule 39
	qVAR           reduce using rule 39
	CON            reduce using rule 39
	qCON           reduce using rule 39
	PSTRING        reduce using rule 39
	PINTEGER       reduce using rule 39
	INT            reduce using rule 39
	%eof           reduce using rule 39


State 63

	expr -> '(' expr . ')'                              (rule 32)
	expr -> expr . expr_list                            (rule 36)

	'('            shift, and enter state 57
	')'            shift, and enter state 75
	'$w/w'         shift, and enter state 58
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19
	PSTRING        shift, and enter state 59
	PINTEGER       shift, and enter state 60
	INT            shift, and enter state 61

	var            goto state 53
	con            goto state 54
	expr           goto state 66
	expr_list      goto state 67
	expr_terminal  goto state 56

State 64

	expr -> expr_terminal '@' . type                    (rule 33)

	'['            shift, and enter state 16
	'('            shift, and enter state 17
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type           goto state 74
	type_terminal  goto state 15

State 65

	expr -> expr_terminal '`' . CAST '`' coercion       (rule 34)

	CAST           shift, and enter state 73


State 66

	expr -> expr . expr_list                            (rule 36)
	expr_list -> expr . expr_list                       (rule 37)
	expr_list -> expr .                                 (rule 38)

	'::'           reduce using rule 38
	'('            shift, and enter state 57
			(reduce using rule 38)

	')'            reduce using rule 38
	','            reduce using rule 38
	'$w/w'         shift, and enter state 58
			(reduce using rule 38)

	VAR            shift, and enter state 7
			(reduce using rule 38)

	qVAR           shift, and enter state 8
			(reduce using rule 38)

	CON            shift, and enter state 18
			(reduce using rule 38)

	qCON           shift, and enter state 19
			(reduce using rule 38)

	PSTRING        shift, and enter state 59
			(reduce using rule 38)

	PINTEGER       shift, and enter state 60
			(reduce using rule 38)

	INT            shift, and enter state 61
			(reduce using rule 38)

	%eof           reduce using rule 38

	var            goto state 53
	con            goto state 54
	expr           goto state 66
	expr_list      goto state 72
	expr_terminal  goto state 56

State 67

	expr -> expr expr_list .                            (rule 36)

	'::'           reduce using rule 36
	'('            reduce using rule 36
	')'            reduce using rule 36
	','            reduce using rule 36
	'$w/w'         reduce using rule 36
	VAR            reduce using rule 36
	qVAR           reduce using rule 36
	CON            reduce using rule 36
	qCON           reduce using rule 36
	PSTRING        reduce using rule 36
	PINTEGER       reduce using rule 36
	INT            reduce using rule 36
	%eof           reduce using rule 36


State 68

	unf -> OtherCon '[' . ']'                           (rule 14)

	']'            shift, and enter state 71


State 69

	unf -> Unf '{' . Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	Src            shift, and enter state 70


State 70

	unf -> Unf '{' Src . '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	'='            shift, and enter state 77


State 71

	unf -> OtherCon '[' ']' .                           (rule 14)

	']'            reduce using rule 14
	','            reduce using rule 14


State 72

	expr -> expr expr_list .                            (rule 36)
	expr_list -> expr expr_list .                       (rule 37)

	'::'           reduce using rule 37
			(reduce using rule 36)

	'('            reduce using rule 37
			(reduce using rule 36)

	')'            reduce using rule 37
			(reduce using rule 36)

	','            reduce using rule 37
			(reduce using rule 36)

	'$w/w'         reduce using rule 37
			(reduce using rule 36)

	VAR            reduce using rule 37
			(reduce using rule 36)

	qVAR           reduce using rule 37
			(reduce using rule 36)

	CON            reduce using rule 37
			(reduce using rule 36)

	qCON           reduce using rule 37
			(reduce using rule 36)

	PSTRING        reduce using rule 37
			(reduce using rule 36)

	PINTEGER       reduce using rule 37
			(reduce using rule 36)

	INT            reduce using rule 37
			(reduce using rule 36)

	%eof           reduce using rule 37
			(reduce using rule 36)



State 73

	expr -> expr_terminal '`' CAST . '`' coercion       (rule 34)

	'`'            shift, and enter state 76


State 74

	type -> type . type_terminal                        (rule 24)
	expr -> expr_terminal '@' type .                    (rule 33)

	'::'           reduce using rule 33
	'['            shift, and enter state 16
	'('            shift, and enter state 36
			(reduce using rule 33)

	')'            reduce using rule 33
	','            reduce using rule 33
	'$w/w'         reduce using rule 33
	VAR            shift, and enter state 7
			(reduce using rule 33)

	qVAR           shift, and enter state 8
			(reduce using rule 33)

	CON            shift, and enter state 18
			(reduce using rule 33)

	qCON           shift, and enter state 19
			(reduce using rule 33)

	PSTRING        reduce using rule 33
	PINTEGER       reduce using rule 33
	INT            reduce using rule 33
	%eof           reduce using rule 33

	var            goto state 12
	con            goto state 13
	type_terminal  goto state 35

State 75

	expr -> '(' expr ')' .                              (rule 32)

	'::'           reduce using rule 32
	'('            reduce using rule 32
	')'            reduce using rule 32
	','            reduce using rule 32
	'$w/w'         reduce using rule 32
	VAR            reduce using rule 32
	qVAR           reduce using rule 32
	CON            reduce using rule 32
	qCON           reduce using rule 32
	PSTRING        reduce using rule 32
	PINTEGER       reduce using rule 32
	INT            reduce using rule 32
	%eof           reduce using rule 32


State 76

	expr -> expr_terminal '`' CAST '`' . coercion       (rule 34)

	'('            shift, and enter state 57
	'$w/w'         shift, and enter state 58
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19
	PSTRING        shift, and enter state 59
	PINTEGER       shift, and enter state 60
	INT            shift, and enter state 61

	var            goto state 53
	con            goto state 54
	coercion       goto state 79
	expr           goto state 80
	expr_terminal  goto state 56

State 77

	unf -> Unf '{' Src '=' . CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	CON            shift, and enter state 78


State 78

	unf -> Unf '{' Src '=' CON . ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	','            shift, and enter state 82


State 79

	expr -> expr_terminal '`' CAST '`' coercion .       (rule 34)

	'::'           reduce using rule 34
	'('            reduce using rule 34
	')'            reduce using rule 34
	','            reduce using rule 34
	'$w/w'         reduce using rule 34
	VAR            reduce using rule 34
	qVAR           reduce using rule 34
	CON            reduce using rule 34
	qCON           reduce using rule 34
	PSTRING        reduce using rule 34
	PINTEGER       reduce using rule 34
	INT            reduce using rule 34
	%eof           reduce using rule 34


State 80

	coercion -> expr . '::' type                        (rule 31)
	expr -> expr . expr_list                            (rule 36)

	'::'           shift, and enter state 81
	'('            shift, and enter state 57
	'$w/w'         shift, and enter state 58
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19
	PSTRING        shift, and enter state 59
	PINTEGER       shift, and enter state 60
	INT            shift, and enter state 61

	var            goto state 53
	con            goto state 54
	expr           goto state 66
	expr_list      goto state 67
	expr_terminal  goto state 56

State 81

	coercion -> expr '::' . type                        (rule 31)

	'['            shift, and enter state 16
	'('            shift, and enter state 17
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type           goto state 84
	type_terminal  goto state 15

State 82

	unf -> Unf '{' Src '=' CON ',' . TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	TopLvl         shift, and enter state 83


State 83

	unf -> Unf '{' Src '=' CON ',' TopLvl . '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	'='            shift, and enter state 85


State 84

	type -> type . type_terminal                        (rule 24)
	coercion -> expr '::' type .                        (rule 31)

	'::'           reduce using rule 31
	'['            shift, and enter state 16
	'('            shift, and enter state 36
			(reduce using rule 31)

	')'            reduce using rule 31
	','            reduce using rule 31
	'$w/w'         reduce using rule 31
	VAR            shift, and enter state 7
			(reduce using rule 31)

	qVAR           shift, and enter state 8
			(reduce using rule 31)

	CON            shift, and enter state 18
			(reduce using rule 31)

	qCON           shift, and enter state 19
			(reduce using rule 31)

	PSTRING        reduce using rule 31
	PINTEGER       reduce using rule 31
	INT            reduce using rule 31
	%eof           reduce using rule 31

	var            goto state 12
	con            goto state 13
	type_terminal  goto state 35

State 85

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' . CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	CON            shift, and enter state 86


State 86

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON . ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	','            shift, and enter state 87


State 87

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' . Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	Value          shift, and enter state 88


State 88

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value . '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	'='            shift, and enter state 89


State 89

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' . CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	CON            shift, and enter state 90


State 90

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON . ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	','            shift, and enter state 91


State 91

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' . ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	ConLike        shift, and enter state 92


State 92

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike . '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	'='            shift, and enter state 93


State 93

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' . CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	CON            shift, and enter state 94


State 94

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON . ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	','            shift, and enter state 95


State 95

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' . WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	WorkFree       shift, and enter state 96


State 96

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree . '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	'='            shift, and enter state 97


State 97

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' . CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	CON            shift, and enter state 98


State 98

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON . ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	','            shift, and enter state 99


State 99

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' . Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	Expandable     shift, and enter state 100


State 100

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable . '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	'='            shift, and enter state 101


State 101

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' . CON ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	CON            shift, and enter state 102


State 102

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON . ',' Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	','            shift, and enter state 103


State 103

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' . Guidance '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	Guidance       shift, and enter state 104


State 104

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance . '=' uf_guidance Tmpl '=' type '}'    (rule 15)

	'='            shift, and enter state 105


State 105

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' . uf_guidance Tmpl '=' type '}'    (rule 15)

	ALWAYS_IF      shift, and enter state 107

	uf_guidance    goto state 106

State 106

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance . Tmpl '=' type '}'    (rule 15)

	Tmpl           shift, and enter state 109


State 107

	uf_guidance -> ALWAYS_IF . '(' key_value_eq ')'     (rule 16)

	'('            shift, and enter state 108


State 108

	uf_guidance -> ALWAYS_IF '(' . key_value_eq ')'     (rule 16)

	VAR            shift, and enter state 112

	key_value_eq   goto state 111

State 109

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl . '=' type '}'    (rule 15)

	'='            shift, and enter state 110


State 110

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' . type '}'    (rule 15)

	'['            shift, and enter state 16
	'('            shift, and enter state 17
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type           goto state 115
	type_terminal  goto state 15

State 111

	uf_guidance -> ALWAYS_IF '(' key_value_eq . ')'     (rule 16)

	')'            shift, and enter state 114


State 112

	key_value_eq -> VAR . '=' expr                      (rule 17)
	key_value_eq -> VAR . '=' expr ',' key_value_eq     (rule 18)

	'='            shift, and enter state 113


State 113

	key_value_eq -> VAR '=' . expr                      (rule 17)
	key_value_eq -> VAR '=' . expr ',' key_value_eq     (rule 18)

	'('            shift, and enter state 57
	'$w/w'         shift, and enter state 58
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19
	PSTRING        shift, and enter state 59
	PINTEGER       shift, and enter state 60
	INT            shift, and enter state 61

	var            goto state 53
	con            goto state 54
	expr           goto state 117
	expr_terminal  goto state 56

State 114

	uf_guidance -> ALWAYS_IF '(' key_value_eq ')' .     (rule 16)

	Tmpl           reduce using rule 16


State 115

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type . '}'    (rule 15)
	type -> type . type_terminal                        (rule 24)

	'['            shift, and enter state 16
	'}'            shift, and enter state 116
	'('            shift, and enter state 36
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19

	var            goto state 12
	con            goto state 13
	type_terminal  goto state 35

State 116

	unf -> Unf '{' Src '=' CON ',' TopLvl '=' CON ',' Value '=' CON ',' ConLike '=' CON ',' WorkFree '=' CON ',' Expandable '=' CON ',' Guidance '=' uf_guidance Tmpl '=' type '}' .    (rule 15)

	']'            reduce using rule 15
	','            reduce using rule 15


State 117

	key_value_eq -> VAR '=' expr .                      (rule 17)
	key_value_eq -> VAR '=' expr . ',' key_value_eq     (rule 18)
	expr -> expr . expr_list                            (rule 36)

	'('            shift, and enter state 57
	')'            reduce using rule 17
	','            shift, and enter state 118
	'$w/w'         shift, and enter state 58
	VAR            shift, and enter state 7
	qVAR           shift, and enter state 8
	CON            shift, and enter state 18
	qCON           shift, and enter state 19
	PSTRING        shift, and enter state 59
	PINTEGER       shift, and enter state 60
	INT            shift, and enter state 61

	var            goto state 53
	con            goto state 54
	expr           goto state 66
	expr_list      goto state 67
	expr_terminal  goto state 56

State 118

	key_value_eq -> VAR '=' expr ',' . key_value_eq     (rule 18)

	VAR            shift, and enter state 112

	key_value_eq   goto state 119

State 119

	key_value_eq -> VAR '=' expr ',' key_value_eq .     (rule 18)

	')'            reduce using rule 18


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 45
Number of terminals: 40
Number of non-terminals: 18
Number of states: 120
